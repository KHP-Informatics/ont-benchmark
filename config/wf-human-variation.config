params {
    //Input parameters
    bam = null //specify in the CLI
    ref = "/scratch/prj/ppn_als_longread/references/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna"
    tr_bed = "/scratch/prj/ppn_als_longread/references/human_GRCh38_no_alt_analysis_set.trf.bed" //Providing a tandem repeat BED can improve calling in repetitive regions.
    sample_name = null //specify in the CLI
    sex = "female" //default - specify in the CLI

    //Feature parameters
    snp = true //SNV calling
    sv = true //SV calling
    mod = true //Analysis of modified bases
    cnv = true //CNV calling
    str = true //STR genotyping
    annotation = true //Annotation with SnpEff

    //Output parameters
    out_dir = null //specify in the CLI
    output_separate_phased = false

    //Variant calling parameters
    basecaller_cfg = "dna_r10.4.1_e8.2_400bps_sup@v4.3.0" //default - specify in the CLI
    bam_min_coverage = 0 //If '0' the check will be skipped and the workflow will proceed directly to the downstream analyses.
    downsample_coverage = false
    downsample_coverage_target = 60 //Only enabled if downsample_coverage is true.
    phased = false
    /*Running the workflow in phasing mode doubles the runtime,
    and significantly increases the storage requirements to the order of terabytes.*/
    use_longphase = false //Only enabled if phased is true.

    //Multithreading Parameters
    threads = 8
    ubam_map_threads = 8
    ubam_sort_threads = 8
    ubam_bam2fq_threads = 8
    merge_threads = 8
    modkit_threads = 8
}

workDir = "/scratch/prj/ppn_als_longread/work"
resume = true
cleanup = false

docker {
    enabled = false
}

singularity {
    enabled = true
    autoMounts = true
    cacheDir = "/scratch/users/${System.getenv('USER')}/singularity/cache"
}

executor {
    name = "slurm"
    queueSize = 50
}

process {
    queue = "cpu,nd_bioinformatics_cpu,interruptible_cpu"
    errorStrategy = 'retry'
    maxRetries = 2
    time = 1.h

    withName: checkBamHeaders { cpus = 1; memory = 2.GB; time = 30.min }
    withName: sortBam { cpus = 8; memory = { 16.GB * task.attempt }; time = 4.h }
    withName: mergeBams { cpus = 8; memory = { 16.GB * task.attempt }; time = 4.h }
    withName: catSortBams { cpus = 10; memory = { 16.GB * task.attempt }; time = { 4.h * task.attempt } }
    withName: validateIndex { cpus = 1; memory = 2.GB; time = 30.min }
    withName: samtools_index { cpus = 4; memory = 4.GB; time = 30.min }
    withName: check_for_alignment { cpus = 2; memory = 4.GB; time = 30.min }
    withName: minimap2_alignment { memory = { 32.GB * task.attempt }; time = { 6.h * task.attempt } }
    withName: getGenome { cpus = 1; memory = 4.GB }
    withName: getAllChromosomesBed { cpus = 1; memory = 4.GB }
    withName: mosdepth { cpus = 4; memory = { 8.GB * task.attempt } }
    withName: getVersions { cpus = 1; memory = 4.GB; time = 30.min }
    withName: getParams { cpus = 1; memory = 1.GB; time = 30.min }
    withName: readStats { cpus = 4; memory = 4.GB }
    withName: makeAlignmentReport { cpus = 2; memory = 16.GB }
    withName: failedQCReport { cpus = 2; memory = 16.GB }
    withName: lookup_clair3_model { cpus = 1; memory = 1.GB; time = 30.min }
    withName: make_chunks { cpus = 1; memory = 4.GB; time = 30.min }
    withName: pileup_variants { cpus = 1; memory = 4.GB; time = 30.min }
    withName: aggregate_pileup_variants { cpus = 2; memory = 4.GB }
    withName: select_het_snps { cpus = 2; memory = 4.GB }
    withName: phase_contig { cpus = 8; time = 4.h }
    withName: get_qual_filter { cpus = 2; memory = 4.GB; time = 30.min }
    withName: create_candidates { cpus = 2; memory = 4.GB; time = 30.min }
    withName: evaluate_candidates { cpus = 1; memory = { 8.GB * task.attempt } }
    withName: aggregate_full_align_variants { cpus = 2; memory = { 4.GB * task.attempt } }
    withName: merge_pileup_and_full_vars { cpus = 2; memory = 4.GB }
    withName: post_clair_phase_contig { cpus = 8; time = 4.h }
    withName: post_clair_contig_haplotag { cpus = 4; time = 4.h }
    withName: cat_haplotagged_contigs { cpus = 4; memory = 16.GB }
    withName: aggregate_all_variants { cpus = 4; memory = { 8.GB * task.attempt } }
    withName: sniffles2 { memory = 8.GB; time = 4.h }
    withName: filterCalls { memory = 8.GB }
    withName: sortVCF { cpus = 2; memory = 4.GB }
    withName: annotate_vcf { cpus = 2; memory = 8.GB }
    withName: output_sv { cpus = 1; memory = 1.GB; time = 30.min }
    withName: refine_with_sv { cpus = 4; memory = { 8.GB * task.attempt } }
    withName: concat_refined_snp { cpus = 1; memory = 4.GB }
    withName: concat_vcfs  { cpus = 8; memory = 8.GB }
    withName: sift_clinvar_vcf { cpus = 1; memory = 4.GB }
    withName: vcfStats { cpus = 2; memory = 4.GB }
    withName: output_snp { cpus = 1; memory = 1.GB; time = 30.min }
    withName: validate_modbam { cpus = 1; memory = 4.GB; time = 30.min }
    withName: modkit { memory = { 16.GB * task.attempt }; time = 4.h }
    withName: concat_bedmethyl { cpus = 4; memory = 8.GB }
    withName: callCNV { cpus = 2; memory = { 16.GB * task.attempt }; time = 4.h }
    withName: bgzip_and_index_vcf { cpus = 1; memory = 1.GB; time = 30.min }
    withName: add_snp_tools_to_versions { cpus = 1; memory = 2.GB; time = 30.min }
    withName: makeReport { cpus = 1; memory = 16.GB }
    withName: output_cnv { cpus = 1; memory = 1.GB; time = 30.min }
    withName: call_str { cpus = 2; memory = 4.GB }
    withName: annotate_repeat_expansions { cpus = 1; memory = 4.GB }
    withName: bam_region_filter { cpus = 1; memory = 4.GB }
    withName: bam_read_filter { cpus = 1; memory = 4.GB }
    withName: generate_str_content { cpus = 1; memory = 4.GB }
    withName: merge_tsv { cpus = 1; memory = 4.GB }
    withName: output_str { cpus = 1; memory = 1.GB; time = 30.min }
    withName: configure_jbrowse { cpus = 2; memory = 1.GB; time = 30.min }
    withName: publish_artifact { cpus = 1; memory = 1.GB; time = 30.min }
}
